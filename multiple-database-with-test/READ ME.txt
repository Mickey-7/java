reference : https://www.javadevjournal.com/spring-boot/multiple-data-sources-with-spring-boot/

----------------------------------------------------------------------------------------------

1. Maven Setup

    dependencies -> Spring Data JPA, Spring Boot DevTools, Spring Web & MySQL Driver

    on pom.xml,
        comment out the autogenerated dependency exclusion tag to enable junit like below:

        		<dependency>
        			<groupId>org.springframework.boot</groupId>
        			<artifactId>spring-boot-starter-test</artifactId>
        			<scope>test</scope>
        <!--			<exclusions>-->
        <!--				<exclusion>-->
        <!--					<groupId>org.junit.vintage</groupId>-->
        <!--					<artifactId>junit-vintage-engine</artifactId>-->
        <!--				</exclusion>-->
        <!--			</exclusions>-->
        		</dependency>

----------------------------------------------------------------------------------------------

2. DataSource Configurations

    Spring Boot provides a way to configure our project properties using application.properties or yml file.
    In this post, we will use application.properties file.
    To use multiple DataSources, let’s add the following details in the property file.

    spring.jpa.generate-ddl=true

    spring.datasource.jdbc-url = jdbc:mysql://localhost:3307/db1
    spring.datasource.username = root
    spring.datasource.password = PASSWORD
    spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver

    #second db2 ...
    db2.datasource.jdbc-url = jdbc:mysql://localhost:3307/db2
    db2.datasource.username = root
    db2.datasource.password = PASSWORD
    db2.datasource.driver-class-name= com.mysql.cj.jdbc.Driver

    NOTE: notice that we change the port to 3307 as mariadb is already running on default port 3306

    Let’s keep in mind the following important points

    Please create 2 different databases in your MySql Database.

    The dialect to use is also automatically detected based on the current DataSource,
    but you can set spring.jpa.database yourself if you want to be explicit and bypass that check on startup.

    C:\Users\donat>docker run -d -e MYSQL_ROOT_PASSWORD=PASSWORD -p:3307:3306 mysql:8.0.18
    5aeb9efddacc04651a3e97e5def5f8e0803860f31bef3e98d90c04c280e5fce1

    C:\Users\donat>docker exec -it 5ae bash
    root@5aeb9efddacc:/# mysql -u root -p
    Enter password:
    Welcome to the MySQL monitor.  Commands end with ; or \g.
    Your MySQL connection id is 8
    Server version: 8.0.18 MySQL Community Server - GPL

    Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.

    Oracle is a registered trademark of Oracle Corporation and/or its
    affiliates. Other names may be trademarks of their respective
    owners.

    Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

    mysql> create database db2;
    Query OK, 1 row affected (0.01 sec)

    mysql> create database db1;
    Query OK, 1 row affected (0.01 sec)

    mysql> show databases;
    +--------------------+
    | Database           |
    +--------------------+
    | db1                |
    | db2                |
    | information_schema |
    | mysql              |
    | performance_schema |
    | sys                |
    +--------------------+
    6 rows in set (0.00 sec)

    mysql>

    NOTE: we use port 3307 by changing default -p:3306:3306 to -p:3307:3306

----------------------------------------------------------------------------------------------

3. JPA Entities
    Let’s define the following 2 JPA entities for our post.

    Product

    @Entity
    public class ProductModel {
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private Long id;

        @Column(nullable = false)
        private String code;
        private String name;
        private double price;

        public ProductModel() {
        }

        public ProductModel( String code, String name, double price) {
            this.code = code;
            this.name = name;
            this.price = price;
        }

        public Long getId() {
            return id;
        }

        public void setId(Long id) {
            this.id = id;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String code) {
            this.code = code;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public double getPrice() {
            return price;
        }

        public void setPrice(double price) {
            this.price = price;
        }

        @Override
        public String toString() {
            return "ProductModel{" +
                    "id=" + id +
                    ", code='" + code + '\'' +
                    ", name='" + name + '\'' +
                    ", price=" + price +
                    '}';
        }
    }


    Customer

    @Entity
    public class CustomerModel {
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private Long id;

        @Column(unique = true, nullable = false)
        private String email;
        private String firstName;
        private String lastName;

        public CustomerModel() {
        }


        public Long getId() {
            return id;
        }

        public void setId(Long id) {
            this.id = id;
        }

        public String getEmail() {
            return email;
        }

        public void setEmail(String email) {
            this.email = email;
        }

        public String getFirstName() {
            return firstName;
        }

        public void setFirstName(String firstName) {
            this.firstName = firstName;
        }

        public String getLastName() {
            return lastName;
        }

        public void setLastName(String lastName) {
            this.lastName = lastName;
        }

        public CustomerModel(String email, String firstName, String lastName) {
            this.email = email;
            this.firstName = firstName;
            this.lastName = lastName;
        }

        @Override
        public String toString() {
            return "CustomerModel{" +
                    "id=" + id +
                    ", email='" + email + '\'' +
                    ", firstName='" + firstName + '\'' +
                    ", lastName='" + lastName + '\'' +
                    '}';
        }
    }

    We added both entities in different packages.
    This is important and we will explain this in the next section.

----------------------------------------------------------------------------------------------

4. Package Structure
    We will have a different package structure for both product and customer in this example.
    This is important while creating configuration classes.
    While creating config classes, we need to specify the base packages which will be
    used by Spring to read different configurations and create multiple Datasource.
    For our example, this is how the package structure look like

    src/main/java
    - com.example.multipledatabasewithtest
          - product
            - data
            - repo
            - config
         - customer
           - data
           - repo
           - config

----------------------------------------------------------------------------------------------

5. JPA Repositories
    Let’s create the JPA repositories for our Customer and Product entities.
    Spring Data JPA focuses on using JPA to store data in a relational database.
    Its most compelling feature is the ability to create repository implementations automatically,
    at runtime, from a repository interface.

    5.1 Product Repository
    @Repository
    public interface ProductRepository extends JpaRepository<ProductModel,Integer> {
    }

    5.2 Customer Repository
    @Repository
    public interface CustomerRepository extends JpaRepository < CustomerModel, Integer > {
    }

----------------------------------------------------------------------------------------------

6. Spring Configuration Classes
    In the final step, we will create two Spring configuration classes
    whose responsibilities are to read the configurations and make sure all
    necessary setup/classes are available to our project on the application startup.
    We are creating configuration classes for the Product and Customer with the following details:

        DataSource details
        EntityManagerFactory
        TransactionManager

    To put it in simple words, we will have these separate configuration for both Customer and Product class.

    Customer

    @Configuration
    @EnableTransactionManagement
    @EnableJpaRepositories(
            entityManagerFactoryRef = "customerEntityManagerFactory",
            transactionManagerRef = "customerTransactionManager",
            basePackages = {
                    //copy the repo package name
                    "com.example.multipledatabasewithtest.customer.repo"
            }
    )
    public class CustomerConfig {

        @Primary
        @Bean(name = "customerDataSource")
        @ConfigurationProperties(prefix = "spring.datasource")
        public DataSource customerDataSource(){
            return DataSourceBuilder.create().build();
        }

        @Primary
        @Bean(name = "customerEntityManagerFactory")
        public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean(EntityManagerFactoryBuilder builder, @Qualifier("customerDataSource") DataSource dataSource){
            return builder
                    .dataSource(dataSource)
                    //copy the data package name
                    .packages("com.example.multipledatabasewithtest.customer.data")
                    .persistenceUnit("db1")
                    .build();
        }

        @Primary
        @Bean(name = "customerTransactionManager")
        public PlatformTransactionManager customerTransactionManager(@Qualifier("customerEntityManagerFactory") EntityManagerFactory customerEntityManager ){
            return new JpaTransactionManager(customerEntityManager);
        }

    }

    Product

    @Configuration
    @EnableTransactionManagement
    @EnableJpaRepositories(
            entityManagerFactoryRef = "productEntityManagerFactory",
            transactionManagerRef = "productTransactionManager",
            basePackages = {
                    //copy the package name of the repo
                    "com.example.multipledatabasewithtest.product.repo"
            }
    )
    public class ProductConfig {
        @Bean(name = "productDataSource")
        @ConfigurationProperties(prefix = "db2.datasource")
        public DataSource dataSource(){
            return DataSourceBuilder.create().build();
        }

        @Bean(name = "productEntityManagerFactory")
        public LocalContainerEntityManagerFactoryBean barEntityManagerFactory(EntityManagerFactoryBuilder builder, @Qualifier("productDataSource") DataSource dataSource) {
            return builder
                    .dataSource(dataSource)
                    //copy the data package name
                    .packages("com.example.multipledatabasewithtest.product.data")
                    .persistenceUnit("db2")
                    .build();
        }

        @Bean(name = "productTransactionManager")
        public PlatformTransactionManager productTransactionManager(@Qualifier("productEntityManagerFactory") EntityManagerFactory productEntityManagerFactory){
            return new JpaTransactionManager(productEntityManagerFactory);
        }
    }

    We are setting customerTranscationManager as the primary manager using @Primary annotation.
    This is important in case we are injecting transaction manager without specifying it.
    Spring will pick the primary bean in case multiple instances found during injection.

----------------------------------------------------------------------------------------------

7. Testing
    Let’s create a simple test case to see the above code in action.

    on test/java/com.example.multipledatabasewithtest,

        create MultipleDatabaseCustomerTests class

        @SpringBootTest
        @RunWith(SpringRunner.class)
        public class MultipleDataSourceCustomerTests {
            @Autowired
            private CustomerRepository customerRepository;

            @Test
            @Transactional("customerTransactionManager")
            public void create_check_customer(){
                CustomerModel customerModel = new CustomerModel("user@javadevjournal.com","Robert","Hickle");
                customerModel = customerRepository.save(customerModel);

                Assert.assertNotNull(customerRepository.findById(customerModel.getId()));
                Assert.assertNotEquals(customerRepository.findById(customerModel.getId()).get().getEmail(),"user@javadevjournal.com");


            }
        }






----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------

error encountered:

    upon running MultipleDataSourceCustomerTests,

    "C:\Program Files\Java\jdk-13\bin\java.exe" -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\lib\idea_rt.jar=55873:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\plugins\junit\lib\junit5-rt.jar;C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test\target\test-classes;C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test\target\classes;C:\Users\donat\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.3.1.RELEASE\spring-boot-starter-data-jpa-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.3.1.RELEASE\spring-boot-starter-aop-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-aop\5.2.7.RELEASE\spring-aop-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\aspectj\aspectjweaver\1.9.5\aspectjweaver-1.9.5.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.1.RELEASE\spring-boot-starter-jdbc-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;C:\Users\donat\.m2\repository\org\springframework\spring-jdbc\5.2.7.RELEASE\spring-jdbc-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\donat\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\donat\.m2\repository\org\hibernate\hibernate-core\5.4.17.Final\hibernate-core-5.4.17.Final.jar;C:\Users\donat\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\donat\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\donat\.m2\repository\net\bytebuddy\byte-buddy\1.10.11\byte-buddy-1.10.11.jar;C:\Users\donat\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\donat\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\donat\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\donat\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\donat\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\donat\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\donat\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\donat\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\donat\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\donat\.m2\repository\org\springframework\data\spring-data-jpa\2.3.1.RELEASE\spring-data-jpa-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\data\spring-data-commons\2.3.1.RELEASE\spring-data-commons-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-orm\5.2.7.RELEASE\spring-orm-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-context\5.2.7.RELEASE\spring-context-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-tx\5.2.7.RELEASE\spring-tx-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-beans\5.2.7.RELEASE\spring-beans-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\donat\.m2\repository\org\springframework\spring-aspects\5.2.7.RELEASE\spring-aspects-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.3.1.RELEASE\spring-boot-starter-web-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.1.RELEASE\spring-boot-starter-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.3.1.RELEASE\spring-boot-starter-logging-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\donat\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\donat\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.3\log4j-to-slf4j-2.13.3.jar;C:\Users\donat\.m2\repository\org\apache\logging\log4j\log4j-api\2.13.3\log4j-api-2.13.3.jar;C:\Users\donat\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\donat\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\donat\.m2\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.3.1.RELEASE\spring-boot-starter-json-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.1.RELEASE\spring-boot-starter-tomcat-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.36\tomcat-embed-core-9.0.36.jar;C:\Users\donat\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;C:\Users\donat\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.36\tomcat-embed-websocket-9.0.36.jar;C:\Users\donat\.m2\repository\org\springframework\spring-web\5.2.7.RELEASE\spring-web-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-webmvc\5.2.7.RELEASE\spring-webmvc-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-expression\5.2.7.RELEASE\spring-expression-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-devtools\2.3.1.RELEASE\spring-boot-devtools-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot\2.3.1.RELEASE\spring-boot-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.1.RELEASE\spring-boot-autoconfigure-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.3.1.RELEASE\spring-boot-starter-test-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-test\2.3.1.RELEASE\spring-boot-test-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.3.1.RELEASE\spring-boot-test-autoconfigure-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\donat\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\donat\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\donat\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\donat\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\donat\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\donat\.m2\repository\org\assertj\assertj-core\3.16.1\assertj-core-3.16.1.jar;C:\Users\donat\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter\5.6.2\junit-jupiter-5.6.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.6.2\junit-jupiter-api-5.6.2.jar;C:\Users\donat\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\donat\.m2\repository\org\junit\platform\junit-platform-commons\1.6.2\junit-platform-commons-1.6.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.6.2\junit-jupiter-params-5.6.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.6.2\junit-jupiter-engine-5.6.2.jar;C:\Users\donat\.m2\repository\org\junit\vintage\junit-vintage-engine\5.6.2\junit-vintage-engine-5.6.2.jar;C:\Users\donat\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\donat\.m2\repository\org\junit\platform\junit-platform-engine\1.6.2\junit-platform-engine-1.6.2.jar;C:\Users\donat\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\donat\.m2\repository\org\mockito\mockito-core\3.3.3\mockito-core-3.3.3.jar;C:\Users\donat\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.11\byte-buddy-agent-1.10.11.jar;C:\Users\donat\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\donat\.m2\repository\org\mockito\mockito-junit-jupiter\3.3.3\mockito-junit-jupiter-3.3.3.jar;C:\Users\donat\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\donat\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\donat\.m2\repository\org\springframework\spring-core\5.2.7.RELEASE\spring-core-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-jcl\5.2.7.RELEASE\spring-jcl-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-test\5.2.7.RELEASE\spring-test-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\xmlunit\xmlunit-core\2.7.0\xmlunit-core-2.7.0.jar" com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests
    07:31:44.272 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.279 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
    07:31:44.288 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
    07:31:44.335 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
    07:31:44.352 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests], using SpringBootContextLoader
    07:31:44.357 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: class path resource [com/example/multipledatabasewithtest/MultipleDataSourceCustomerTests-context.xml] does not exist
    07:31:44.357 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: class path resource [com/example/multipledatabasewithtest/MultipleDataSourceCustomerTestsContext.groovy] does not exist
    07:31:44.357 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
    07:31:44.358 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: MultipleDataSourceCustomerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
    07:31:44.400 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.469 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test\target\classes\com\example\multipledatabasewithtest\MultipleDatabaseWithTestApplication.class]
    07:31:44.470 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.multipledatabasewithtest.MultipleDatabaseWithTestApplication for test class com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests
    07:31:44.565 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: using defaults.
    07:31:44.566 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
    07:31:44.586 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4686afc2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1e0b4072, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@791f145a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@38cee291, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b45a2f5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@f09733f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@e350b40, org.springframework.test.context.event.EventPublishingTestExecutionListener@41a0aa7d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2794eab6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6340e5f0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@45099dd3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13e344d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ffaf86, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6574a52c]
    07:31:44.589 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.590 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.593 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.593 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.593 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.593 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.602 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.603 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.604 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.604 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.604 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.605 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.610 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5afa3c9 testClass = MultipleDataSourceCustomerTests, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72035809 testClass = MultipleDataSourceCustomerTests, locations = '{}', classes = '{class com.example.multipledatabasewithtest.MultipleDatabaseWithTestApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5db45159, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@15761df8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@78dd667e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@60dcc9fe, org.springframework.boot.test.context.SpringBootTestArgs@1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
    07:31:44.612 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.613 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:31:44.637 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}

      .   ____          _            __ _ _
     /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
    ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
     \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
      '  |____| .__|_| |_|_| |_\__, | / / / /
     =========|_|==============|___/=/_/_/_/
     :: Spring Boot ::        (v2.3.1.RELEASE)

    2020-07-24 07:31:44.978  INFO 11944 --- [           main] c.e.m.MultipleDataSourceCustomerTests    : Starting MultipleDataSourceCustomerTests on DESKTOP-ADOT1IA with PID 11944 (started by donat in C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test)
    2020-07-24 07:31:44.980  INFO 11944 --- [           main] c.e.m.MultipleDataSourceCustomerTests    : No active profile set, falling back to default profiles: default
    2020-07-24 07:31:45.505  INFO 11944 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
    2020-07-24 07:31:45.553  INFO 11944 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 39ms. Found 1 JPA repository interfaces.
    2020-07-24 07:31:45.553  INFO 11944 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
    2020-07-24 07:31:45.560  INFO 11944 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 1 JPA repository interfaces.
    2020-07-24 07:31:46.294  WARN 11944 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerEntityManagerFactory' defined in class path resource [com/example/multipledatabasewithtest/customer/config/CustomerConfig.class]: Unsatisfied dependency expressed through method 'entityManagerFactoryBean' parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'javax.sql.DataSource' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Qualifier(value="customerDataSource")}
    2020-07-24 07:31:46.305  INFO 11944 --- [           main] ConditionEvaluationReportLoggingListener :

    Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
    2020-07-24 07:31:46.425 ERROR 11944 --- [           main] o.s.boot.SpringApplication               : Application run failed

    org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customerEntityManagerFactory' defined in class path resource [com/example/multipledatabasewithtest/customer/config/CustomerConfig.class]: Unsatisfied dependency expressed through method 'entityManagerFactoryBean' parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'javax.sql.DataSource' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Qualifier(value="customerDataSource")}


    solution:

    NOTE: based on the error itself, we can trace where the error occurred

    on CustomerConfig class,

        @Primary
        @Bean(name = "customerDatasource")
        @ConfigurationProperties(prefix = "spring.datasource")
        public DataSource customerDataSource(){
            return DataSourceBuilder.create().build();
        }

        @Primary
        @Bean(name = "customerEntityManagerFactory")
        public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean(EntityManagerFactoryBuilder builder, @Qualifier("customerDataSource") DataSource dataSource){
            return builder
                    .dataSource(dataSource)
                    //copy the data package name
                    .packages("com.example.multipledatabasewithtest.customer.data")
                    .persistenceUnit("db1")
                    .build();
        }

    the @Bean name should be customerDataSource just like what was declared
    on the second parameter of entityManagerFactoryBean() method

----------------------------------------------------------------------------------------------

error encountered:

    "C:\Program Files\Java\jdk-13\bin\java.exe" -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\lib\idea_rt.jar=55956:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.3\plugins\junit\lib\junit5-rt.jar;C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test\target\test-classes;C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test\target\classes;C:\Users\donat\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.3.1.RELEASE\spring-boot-starter-data-jpa-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.3.1.RELEASE\spring-boot-starter-aop-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-aop\5.2.7.RELEASE\spring-aop-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\aspectj\aspectjweaver\1.9.5\aspectjweaver-1.9.5.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.1.RELEASE\spring-boot-starter-jdbc-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;C:\Users\donat\.m2\repository\org\springframework\spring-jdbc\5.2.7.RELEASE\spring-jdbc-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\donat\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\donat\.m2\repository\org\hibernate\hibernate-core\5.4.17.Final\hibernate-core-5.4.17.Final.jar;C:\Users\donat\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\donat\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\donat\.m2\repository\net\bytebuddy\byte-buddy\1.10.11\byte-buddy-1.10.11.jar;C:\Users\donat\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\donat\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\donat\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\donat\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\donat\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\donat\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\donat\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\donat\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\donat\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\donat\.m2\repository\org\springframework\data\spring-data-jpa\2.3.1.RELEASE\spring-data-jpa-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\data\spring-data-commons\2.3.1.RELEASE\spring-data-commons-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-orm\5.2.7.RELEASE\spring-orm-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-context\5.2.7.RELEASE\spring-context-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-tx\5.2.7.RELEASE\spring-tx-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-beans\5.2.7.RELEASE\spring-beans-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\donat\.m2\repository\org\springframework\spring-aspects\5.2.7.RELEASE\spring-aspects-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.3.1.RELEASE\spring-boot-starter-web-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.1.RELEASE\spring-boot-starter-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.3.1.RELEASE\spring-boot-starter-logging-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\donat\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\donat\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.3\log4j-to-slf4j-2.13.3.jar;C:\Users\donat\.m2\repository\org\apache\logging\log4j\log4j-api\2.13.3\log4j-api-2.13.3.jar;C:\Users\donat\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\donat\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\donat\.m2\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.3.1.RELEASE\spring-boot-starter-json-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;C:\Users\donat\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.1.RELEASE\spring-boot-starter-tomcat-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.36\tomcat-embed-core-9.0.36.jar;C:\Users\donat\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;C:\Users\donat\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.36\tomcat-embed-websocket-9.0.36.jar;C:\Users\donat\.m2\repository\org\springframework\spring-web\5.2.7.RELEASE\spring-web-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-webmvc\5.2.7.RELEASE\spring-webmvc-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-expression\5.2.7.RELEASE\spring-expression-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-devtools\2.3.1.RELEASE\spring-boot-devtools-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot\2.3.1.RELEASE\spring-boot-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.1.RELEASE\spring-boot-autoconfigure-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.3.1.RELEASE\spring-boot-starter-test-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-test\2.3.1.RELEASE\spring-boot-test-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.3.1.RELEASE\spring-boot-test-autoconfigure-2.3.1.RELEASE.jar;C:\Users\donat\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\donat\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\donat\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\donat\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\donat\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\donat\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\donat\.m2\repository\org\assertj\assertj-core\3.16.1\assertj-core-3.16.1.jar;C:\Users\donat\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter\5.6.2\junit-jupiter-5.6.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.6.2\junit-jupiter-api-5.6.2.jar;C:\Users\donat\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\donat\.m2\repository\org\junit\platform\junit-platform-commons\1.6.2\junit-platform-commons-1.6.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.6.2\junit-jupiter-params-5.6.2.jar;C:\Users\donat\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.6.2\junit-jupiter-engine-5.6.2.jar;C:\Users\donat\.m2\repository\org\junit\vintage\junit-vintage-engine\5.6.2\junit-vintage-engine-5.6.2.jar;C:\Users\donat\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\donat\.m2\repository\org\junit\platform\junit-platform-engine\1.6.2\junit-platform-engine-1.6.2.jar;C:\Users\donat\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\donat\.m2\repository\org\mockito\mockito-core\3.3.3\mockito-core-3.3.3.jar;C:\Users\donat\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.11\byte-buddy-agent-1.10.11.jar;C:\Users\donat\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\donat\.m2\repository\org\mockito\mockito-junit-jupiter\3.3.3\mockito-junit-jupiter-3.3.3.jar;C:\Users\donat\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\donat\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\donat\.m2\repository\org\springframework\spring-core\5.2.7.RELEASE\spring-core-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-jcl\5.2.7.RELEASE\spring-jcl-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\springframework\spring-test\5.2.7.RELEASE\spring-test-5.2.7.RELEASE.jar;C:\Users\donat\.m2\repository\org\xmlunit\xmlunit-core\2.7.0\xmlunit-core-2.7.0.jar" com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests
    07:40:20.587 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.595 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
    07:40:20.604 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
    07:40:20.657 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
    07:40:20.676 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests], using SpringBootContextLoader
    07:40:20.682 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: class path resource [com/example/multipledatabasewithtest/MultipleDataSourceCustomerTests-context.xml] does not exist
    07:40:20.683 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: class path resource [com/example/multipledatabasewithtest/MultipleDataSourceCustomerTestsContext.groovy] does not exist
    07:40:20.683 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
    07:40:20.684 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: MultipleDataSourceCustomerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
    07:40:20.733 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.807 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test\target\classes\com\example\multipledatabasewithtest\MultipleDatabaseWithTestApplication.class]
    07:40:20.808 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.multipledatabasewithtest.MultipleDatabaseWithTestApplication for test class com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests
    07:40:20.908 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]: using defaults.
    07:40:20.909 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
    07:40:20.931 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4686afc2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1e0b4072, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@791f145a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@38cee291, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b45a2f5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@f09733f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@e350b40, org.springframework.test.context.event.EventPublishingTestExecutionListener@41a0aa7d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2794eab6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6340e5f0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@45099dd3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13e344d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ffaf86, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6574a52c]
    07:40:20.934 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.935 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.939 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.939 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.939 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.939 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.951 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.952 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.953 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.953 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.953 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.954 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.961 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5afa3c9 testClass = MultipleDataSourceCustomerTests, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@72035809 testClass = MultipleDataSourceCustomerTests, locations = '{}', classes = '{class com.example.multipledatabasewithtest.MultipleDatabaseWithTestApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5db45159, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@15761df8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@78dd667e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@60dcc9fe, org.springframework.boot.test.context.SpringBootTestArgs@1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
    07:40:20.963 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.964 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.example.multipledatabasewithtest.MultipleDataSourceCustomerTests]
    07:40:20.988 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}

      .   ____          _            __ _ _
     /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
    ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
     \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
      '  |____| .__|_| |_|_| |_\__, | / / / /
     =========|_|==============|___/=/_/_/_/
     :: Spring Boot ::        (v2.3.1.RELEASE)

    2020-07-24 07:40:21.365  INFO 2276 --- [           main] c.e.m.MultipleDataSourceCustomerTests    : Starting MultipleDataSourceCustomerTests on DESKTOP-ADOT1IA with PID 2276 (started by donat in C:\Users\donat\Downloads\multiple-database-with-test\multiple-database-with-test)
    2020-07-24 07:40:21.366  INFO 2276 --- [           main] c.e.m.MultipleDataSourceCustomerTests    : No active profile set, falling back to default profiles: default
    2020-07-24 07:40:21.936  INFO 2276 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
    2020-07-24 07:40:21.986  INFO 2276 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 42ms. Found 1 JPA repository interfaces.
    2020-07-24 07:40:21.987  INFO 2276 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
    2020-07-24 07:40:21.994  INFO 2276 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 1 JPA repository interfaces.
    2020-07-24 07:40:22.838  INFO 2276 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: db1]
    2020-07-24 07:40:22.900  INFO 2276 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.17.Final
    2020-07-24 07:40:23.048  INFO 2276 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
    2020-07-24 07:40:23.444  INFO 2276 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
    2020-07-24 07:40:23.803  INFO 2276 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
    2020-07-24 07:40:23.837  INFO 2276 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
    2020-07-24 07:40:24.510  INFO 2276 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
    2020-07-24 07:40:24.517  INFO 2276 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'db1'
    2020-07-24 07:40:24.534  WARN 2276 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productEntityManagerFactory' defined in class path resource [com/example/multipledatabasewithtest/product/config/ProductConfig.class]: Unsatisfied dependency expressed through method 'barEntityManagerFactory' parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'javax.sql.DataSource' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Qualifier(value="")}
    2020-07-24 07:40:24.534  INFO 2276 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'db1'
    2020-07-24 07:40:24.534  INFO 2276 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
    2020-07-24 07:40:24.548  INFO 2276 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
    2020-07-24 07:40:24.557  INFO 2276 --- [           main] ConditionEvaluationReportLoggingListener :

    Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
    2020-07-24 07:40:24.671 ERROR 2276 --- [           main] o.s.boot.SpringApplication               : Application run failed

    org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productEntityManagerFactory' defined in class path resource [com/example/multipledatabasewithtest/product/config/ProductConfig.class]: Unsatisfied dependency expressed through method 'barEntityManagerFactory' parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'javax.sql.DataSource' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Qualifier(value="")}

    solution:

    NOTE: based on the error itself, we can trace where the error occurred

    @Bean(name = "productDataSource")
    @ConfigurationProperties(prefix = "db2.datasource")
    public DataSource dataSource(){
        return DataSourceBuilder.create().build();
    }


    @Bean(name = "productEntityManagerFactory")
    public LocalContainerEntityManagerFactoryBean barEntityManagerFactory(EntityManagerFactoryBuilder builder, @Qualifier DataSource dataSource) {
        return builder
                .dataSource(dataSource)
                //copy the data package name
                .packages("com.example.multipledatabasewithtest.product.data")
                .persistenceUnit("db2")
                .build();
    }


    forgot to include the Qualifier bean name on barEntityManagerFactory() method,
    must be @Qualifier("productDataSource")

----------------------------------------------------------------------------------------------

error encountered:

    upon creating docker container for mysql

    C:\Users\donat>docker run -d -e MYSQL_ROOT_PASSWORD=PASSWORD -p:3307:3306 mysql:8.0.18
    0dc791a8d3a2eb8201abe562671cebd2c31489554ee67264ca0690d18416a539
    docker: Error response from daemon: driver failed programming external connectivity on endpoint modest_ardinghelli (2ed560304a0eea82a22cb58b67b67c9df3fc356815bb189b59043e91c90f9df1): Error starting userland proxy: mkdir /port/tcp:0.0.0.0:3308:tcp:172.17.0.2:3306: input/output error.

    solution:

    restart docker

----------------------------------------------------------------------------------------------









